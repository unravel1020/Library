{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u5565\\u90FD\\u884C\\\\\\u667A\\u6167\\u56FE\\u4E66\\u9986\\\\smart_library\\\\frontend\\\\src\\\\components\\\\ThreeScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { fadeTransition } from '../threejs/fadeTransition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WS_URL = 'ws://localhost:8080'; // 修改为你的后端 WebSocket 地址\n\nexport default function ThreeScene() {\n  _s();\n  const mountRef = useRef();\n  const objectsRef = useRef({}); // 存储所有对象\n  const sceneRef = useRef();\n  const transitionRef = useRef();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    camera.position.z = 10;\n\n    // 初始化过渡效果\n    transitionRef.current = fadeTransition(renderer);\n\n    // 动画循环\n    let animationId;\n    const animate = () => {\n      renderer.render(scene, camera);\n      animationId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // WebSocket 实时数据\n    const socket = new window.WebSocket(WS_URL);\n    socket.onmessage = event => {\n      try {\n        const dataArr = JSON.parse(event.data); // 假设为数组\n        dataArr.forEach(data => {\n          let mesh = objectsRef.current[data.id];\n          if (!mesh) {\n            // 新对象\n            let geometry, material;\n            if (data.type === 'sphere') {\n              geometry = new THREE.SphereGeometry(data.size || 1, 32, 32);\n            } else if (data.type === 'cube') {\n              geometry = new THREE.BoxGeometry(data.size || 1, data.size || 1, data.size || 1);\n            } else {\n              return; // 不支持的类型\n            }\n            material = new THREE.MeshBasicMaterial({\n              color: data.color || '#00ff00',\n              transparent: true,\n              opacity: 0\n            });\n            mesh = new THREE.Mesh(geometry, material);\n            mesh.userData = {\n              id: data.id\n            };\n            scene.add(mesh);\n            objectsRef.current[data.id] = mesh;\n            // 为新对象添加过渡效果\n            transitionRef.current.startTransition(mesh);\n          }\n          // 更新属性\n          const oldPosition = mesh.position.clone();\n          const newPosition = new THREE.Vector3(data.x, data.y, data.z);\n\n          // 如果位置变化较大，添加过渡效果\n          if (oldPosition.distanceTo(newPosition) > 0.1) {\n            transitionRef.current.startTransition(mesh);\n          }\n          mesh.position.copy(newPosition);\n          if (data.color) mesh.material.color.set(data.color);\n          if (data.size) {\n            const newScale = data.size;\n            if (Math.abs(mesh.scale.x - newScale) > 0.1) {\n              transitionRef.current.startTransition(mesh);\n            }\n            mesh.scale.set(newScale, newScale, newScale);\n          }\n        });\n        // 移除未在本次数据中的对象\n        const ids = dataArr.map(d => d.id);\n        Object.keys(objectsRef.current).forEach(id => {\n          if (!ids.includes(id)) {\n            const obj = objectsRef.current[id];\n            transitionRef.current.startTransition(obj);\n            setTimeout(() => {\n              scene.remove(obj);\n              delete objectsRef.current[id];\n            }, 500);\n          }\n        });\n      } catch (e) {\n        console.error('Error processing WebSocket data:', e);\n      }\n    };\n\n    // 交互：点击拾取\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    function onClick(event) {\n      const rect = renderer.domElement.getBoundingClientRect();\n      mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(Object.values(objectsRef.current));\n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        transitionRef.current.startTransition(obj);\n        alert('Clicked object id: ' + obj.userData.id);\n      }\n    }\n    renderer.domElement.addEventListener('click', onClick);\n\n    // 清理\n    return () => {\n      cancelAnimationFrame(animationId);\n      renderer.dispose();\n      if (renderer.domElement && mountRef.current) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      socket.close();\n      renderer.domElement.removeEventListener('click', onClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100vw',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n}\n_s(ThreeScene, \"O9f/zIOcE7gUsbaEQLc6lKtAlxc=\");\n_c = ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","fadeTransition","jsxDEV","_jsxDEV","WS_URL","ThreeScene","_s","mountRef","objectsRef","sceneRef","transitionRef","scene","Scene","current","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","position","z","animationId","animate","render","requestAnimationFrame","socket","WebSocket","onmessage","event","dataArr","JSON","parse","data","forEach","mesh","id","geometry","material","type","SphereGeometry","size","BoxGeometry","MeshBasicMaterial","color","transparent","opacity","Mesh","userData","add","startTransition","oldPosition","clone","newPosition","Vector3","x","y","distanceTo","copy","set","newScale","Math","abs","scale","ids","map","d","Object","keys","includes","obj","setTimeout","remove","e","console","error","raycaster","Raycaster","mouse","Vector2","onClick","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","setFromCamera","intersects","intersectObjects","values","length","object","alert","addEventListener","cancelAnimationFrame","dispose","removeChild","close","removeEventListener","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/啥都行/智慧图书馆/smart_library/frontend/src/components/ThreeScene.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { fadeTransition } from '../threejs/fadeTransition';\r\n\r\nconst WS_URL = 'ws://localhost:8080'; // 修改为你的后端 WebSocket 地址\r\n\r\nexport default function ThreeScene() {\r\n  const mountRef = useRef();\r\n  const objectsRef = useRef({}); // 存储所有对象\r\n  const sceneRef = useRef();\r\n  const transitionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    sceneRef.current = scene;\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    camera.position.z = 10;\r\n\r\n    // 初始化过渡效果\r\n    transitionRef.current = fadeTransition(renderer);\r\n\r\n    // 动画循环\r\n    let animationId;\r\n    const animate = () => {\r\n      renderer.render(scene, camera);\r\n      animationId = requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n\r\n    // WebSocket 实时数据\r\n    const socket = new window.WebSocket(WS_URL);\r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const dataArr = JSON.parse(event.data); // 假设为数组\r\n        dataArr.forEach(data => {\r\n          let mesh = objectsRef.current[data.id];\r\n          if (!mesh) {\r\n            // 新对象\r\n            let geometry, material;\r\n            if (data.type === 'sphere') {\r\n              geometry = new THREE.SphereGeometry(data.size || 1, 32, 32);\r\n            } else if (data.type === 'cube') {\r\n              geometry = new THREE.BoxGeometry(data.size || 1, data.size || 1, data.size || 1);\r\n            } else {\r\n              return; // 不支持的类型\r\n            }\r\n            material = new THREE.MeshBasicMaterial({ \r\n              color: data.color || '#00ff00',\r\n              transparent: true,\r\n              opacity: 0\r\n            });\r\n            mesh = new THREE.Mesh(geometry, material);\r\n            mesh.userData = { id: data.id };\r\n            scene.add(mesh);\r\n            objectsRef.current[data.id] = mesh;\r\n            // 为新对象添加过渡效果\r\n            transitionRef.current.startTransition(mesh);\r\n          }\r\n          // 更新属性\r\n          const oldPosition = mesh.position.clone();\r\n          const newPosition = new THREE.Vector3(data.x, data.y, data.z);\r\n          \r\n          // 如果位置变化较大，添加过渡效果\r\n          if (oldPosition.distanceTo(newPosition) > 0.1) {\r\n            transitionRef.current.startTransition(mesh);\r\n          }\r\n          \r\n          mesh.position.copy(newPosition);\r\n          if (data.color) mesh.material.color.set(data.color);\r\n          if (data.size) {\r\n            const newScale = data.size;\r\n            if (Math.abs(mesh.scale.x - newScale) > 0.1) {\r\n              transitionRef.current.startTransition(mesh);\r\n            }\r\n            mesh.scale.set(newScale, newScale, newScale);\r\n          }\r\n        });\r\n        // 移除未在本次数据中的对象\r\n        const ids = dataArr.map(d => d.id);\r\n        Object.keys(objectsRef.current).forEach(id => {\r\n          if (!ids.includes(id)) {\r\n            const obj = objectsRef.current[id];\r\n            transitionRef.current.startTransition(obj);\r\n            setTimeout(() => {\r\n              scene.remove(obj);\r\n              delete objectsRef.current[id];\r\n            }, 500);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.error('Error processing WebSocket data:', e);\r\n      }\r\n    };\r\n\r\n    // 交互：点击拾取\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n    function onClick(event) {\r\n      const rect = renderer.domElement.getBoundingClientRect();\r\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n      raycaster.setFromCamera(mouse, camera);\r\n      const intersects = raycaster.intersectObjects(Object.values(objectsRef.current));\r\n      if (intersects.length > 0) {\r\n        const obj = intersects[0].object;\r\n        transitionRef.current.startTransition(obj);\r\n        alert('Clicked object id: ' + obj.userData.id);\r\n      }\r\n    }\r\n    renderer.domElement.addEventListener('click', onClick);\r\n\r\n    // 清理\r\n    return () => {\r\n      cancelAnimationFrame(animationId);\r\n      renderer.dispose();\r\n      if (renderer.domElement && mountRef.current) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n      socket.close();\r\n      renderer.domElement.removeEventListener('click', onClick);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ width: '100vw', height: '100vh' }} />;\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}